import subprocess
import requests
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, CallbackContext

# –¢–µ–ª–µ–≥—Ä–∞–º —Ç–æ–∫–µ–Ω
TELEGRAM_TOKEN = '7097257861:AAGsnvA-Xm3rhEXk_syDkwUtbseesM_WX9U'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω

# URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
FLASK_APP_URL = 'https://grgr.cryptosymbiotic.com'

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def start_flask():
    logging.info("–ó–∞–ø—É—Å–∫ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    flask_process = subprocess.Popen(['python3', 'app.py'])
    logging.info(f"Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —Å PID: {flask_process.pid}")
    return flask_process

def get_telegram_username(user_id):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/getChat"
    params = {'chat_id': user_id}
    response = requests.get(url, params=params)
    if response.status_code == 200:
        data = response.json()
        logging.info(f"Telegram API Response: {data}")
        if data['ok']:
            return data['result'].get('username', None)
    else:
        logging.error(f"Failed to fetch username: {response.text}")
    return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
async def start(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ user_id –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    referral_arg = context.args[0] if context.args else None  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ referral_id –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    referral_id = referral_arg.replace('user_', '') if referral_arg else None

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
    telegram_username = get_telegram_username(user_id)
    if telegram_username:
        logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {telegram_username}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        update_url = f"{FLASK_APP_URL}/update_username/{user_id}?username={telegram_username}"
        update_response = requests.get(update_url)
        logging.info(f"–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ Flask: {update_response.text}")
    else:
        logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è user_id: {user_id}")

    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞, –µ—Å–ª–∏ referral_id –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
    if referral_id:
        referral_url = f"{FLASK_APP_URL}/create_referral"
        referral_data = {'user_id': user_id, 'referral_id': int(referral_id)}
        referral_response = requests.post(referral_url, json=referral_data)
        logging.info(f"–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ Flask –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {referral_response.text}")

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å WebAppInfo
    keyboard = [
        [InlineKeyboardButton(text="Play", web_app=WebAppInfo(url=f'{FLASK_APP_URL}/start?user_id={user_id}'))],
        [InlineKeyboardButton(text="Chat", url='https://t.me/grgrdino')],
        [InlineKeyboardButton(text="Chanel", url='https://t.me/ettoonn')],
        [InlineKeyboardButton(text="Buy NFT", url='https://getgems.io/collection/EQAJPR7nXdMn_-nBwTcNRR7mqPv6j9w-mMiLzN9j0iNGjctS')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    welcome_text = (
    "GrGr ü¶ñü¶ï\n\n"
    "Greetings, in touch Cryptozavr bot\n\n"
    "You got into the game that started its release with the NFT collection.\n\n"
    "Ask why?\n\n"
    "So that you can immediately sell your Cryptosaurs. Get points Gr.\n\n"
    "What are we moving towards? Of course, to earn our money from the exchange!\n\n"
    "Forward Cryptosaurs, no mercy! ü¶ñü¶ï"
)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await update.message.reply_photo(photo=open('static/images/logo.png', 'rb'), caption=f'{welcome_text}Hello, your ID: {user_id}', reply_markup=reply_markup)

def main():
    logging.info("–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞...")
    flask_process = start_flask()

    application = Application.builder().token(TELEGRAM_TOKEN).build()
    application.add_handler(CommandHandler("start", start))

    application.run_polling()
    logging.info("Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω")

    # –ó–∞–≤–µ—Ä—à–∞–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
    flask_process.terminate()

if __name__ == '__main__':
    main()
